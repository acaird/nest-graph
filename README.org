#+OPTIONS: ':t H:3 ^:{} author:t date:t email:t num:t toc:t title:t
#+TITLE: Nest Thermostat Graph
#+AUTHOR: Andrew Caird
#+EMAIL: acaird@gmail.com

* Introduction

  This is a project to gather temperature information from the Nest
  API for thermostats and [[https://nest.com/thermostats/nest-temperature-sensor/overview/][temperature sensors]] and store it for later
  analysis.  The parts of this are:
   - gathering the data via Nest's API
   - storing the data
   - plotting the data

  My motivation for this is to see if I need more heating capacity in
  a room where I have a Nest temperature sensor that is controlled by
  a thermostat in another room - if the temperature between the two
  rooms is greatly imbalanced, I either need more heat in one of the
  rooms or for that heat to be on its own thermostat.
  
* Resources
  - At least one [[https://nest.com/connected-home/energy/the-technology-behind-the-nest-thermostat-e-s-display][Nest Thermostat]]
  - At least one [[https://nest.com/thermostats/nest-temperature-sensor/overview/][Nest Temperature Sensor]]
  - The [[https://developers.nest.com/][Nest Developer Guide]]
  - The [[https://codelabs.developers.google.com/codelabs/wwn-api-quickstart/#4][Codelabs "Works with Nest" guide]]
  - The [[https://developers.nest.com/reference/api-thermostat][Nest Thermostat API Guide]]
  - Nest's API advice on [[https://developers.nest.com/guides/api/how-to-handle-redirects][Handling Redirects]]
  - [[https://www.python.org/][Python]]
  - [[https://docs.docker.com/samples/library/influxdb/][InfluxDB]] docker image documentation, [[https://github.com/influxdata/influxdb-python][InfluxDB Python
    documentation]], and some Influx examples ([[http://csetutorials.com/influxdb-tutorial.html][CSE Tutorials]], [[https://opensourceforu.com/2016/12/introduction-influxdb-time-series-database/][Open
    Source Forum]])
  - [[http://docs.grafana.org/features/datasources/influxdb/][Grafana documentation]] and notes on [[http://docs.grafana.org/installation/docker/][Grafana Docker Images]]
* Notes
  Nest doesn't yet support the remote [[https://nest.com/thermostats/nest-temperature-sensor/overview/][Nest Temperature Sensors]] via
  their API, so the immediate goal of this project is unattainable.
  It is likely that the Nest API will support them at some point, so
  for now this can be simply the start of getting the temperatures and
  inserting them into a time series database for later processing.

  Some simple Influx stuff:
  - start the InfluxDB server from its Docker image:
    #+BEGIN_EXAMPLE
      mkdir influx
      docker run -p 8086:8086 -d  -v ${PWD}/influx:/var/lib/influxdb influxdb
    #+END_EXAMPLE
  - use Python to query the InfluxDB for its list of databases:
    #+BEGIN_EXAMPLE
      >>> from influxdb import InfluxDBClient
      >>> client = InfluxDBClient('localhost', 8086, 'root', 'root', 'example')
      >>> client = InfluxDBClient('localhost', 8086) # this also works; should read about the difference
      >>> client.get_list_database()
      [{'name': '_internal'}]
    #+END_EXAMPLE
    and you can see that there is no database other than the the
    default =_internal= database and the actual database to be used
    needs to be created.



  
  
